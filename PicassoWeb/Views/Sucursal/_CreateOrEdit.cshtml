@model PicassoWeb.Models.Sucursal
@using PicassoWeb.Helpers
@* This partial view defines form fields that will appear when creating and editing entities *@
<div class="row">
    <div class="small-12 columns">
        @Html.LabelFor(model => model.Nombre)
        @Html.EditorFor(model => model.Nombre) @Html.ValidationMessageFor(model => model.Nombre)
    </div>
</div>
<div class="row">
    <div class="small-12 columns">
        @Html.LabelFor(model => model.Direccion)
        @Html.EditorFor(model => model.Direccion) @Html.ValidationMessageFor(model => model.Direccion)
    </div>
</div>
<div class="row">
    <div class="small-12 columns">
        @Html.LabelFor(model => model.Telefono)
        @Html.EditorFor(model => model.Telefono) @Html.ValidationMessageFor(model => model.Telefono)
    </div>
</div>
<div class="row">
    <div class="small-12 columns">
        @Html.LabelFor(model => model.Mail)
        @Html.EditorFor(model => model.Mail) @Html.ValidationMessageFor(model => model.Mail)
    </div>
</div>
<div class="row">
    <div class="small-12 columns">
        @Html.LabelFor(model => model.Horarios)
        @Html.EditorFor(model => model.Horarios) @Html.ValidationMessageFor(model => model.Horarios)
    </div>
</div>
<div class="row">
    <div class="large-6 columns right">
        <div class="row">
            Imagen:
            <input id="Imagen" name="Imagen" type="file" accept="image/gif, image/jpeg" />
        </div>
        <div class="row">
            <div class="large-8 columns">
                <a class="th radius" href="#">
                    @Html.Image(Model.Foto, "preview", "preview")
                </a>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="small-12 columns">
        @Html.LabelFor(model => model.Activo)
        @Html.EditorFor(model => model.Activo) @Html.ValidationMessageFor(model => model.Activo)
    </div>
</div>
<div class="row">
    <div class="small-12 columns">
        @Html.LabelFor(model => model.Lat)
        @Html.EditorFor(model => model.Lat) @Html.ValidationMessageFor(model => model.Lat)
    </div>
</div>
<div class="row">
    <div class="small-12 columns">
        @Html.LabelFor(model => model.Lon)
        @Html.EditorFor(model => model.Lon) @Html.ValidationMessageFor(model => model.Lon)
    </div>
</div>
<script type="text/javascript" src="http://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0"></script>
<script type="text/javascript">
    var map = null;

    function getMap() {
        map = new Microsoft.Maps.Map(document.getElementById('myMap'), { credentials: 'AvaJ6DR6XoP_iwtIaLxnAFhi4HdRQkM-D37FFbalJsOLE83qJI0Bkf23HmXXVK76' });
        var startLocation = new Microsoft.Maps.Location(-27.7884, -64.2622);
        map.setView({ center: startLocation, zoom: 17 });
    }

    function locateSuccess(loc) {
        // Set the user's location
        var userLocation = new Microsoft.Maps.Location(loc.coords.latitude, loc.coords.longitude);
        // Zoom in on user's location on map
        map.setView({ center: userLocation, zoom: 40 });
    }


    function attachPushpinDragEndEvent() {
        var pushpinOptions = { draggable: true };
        var pushpin = new Microsoft.Maps.Pushpin(map.getCenter(), pushpinOptions);
        var pushpindragend = Microsoft.Maps.Events.addHandler(pushpin, 'dragend', endDragDetails);
        map.entities.push(pushpin);
        //Setear los textbox con los valores del pin.
        document.getElementById('Lat').value = pushpin._location.latitude.toFixed(5).replace(".", ",");
        document.getElementById('Lon').value = pushpin._location.longitude.toFixed(5).replace(".", ",");
        //deshabilitar boton.
        $('#agregarPin').attr("disabled", true);
        $('#mostrarMapa').attr("disabled", true);
    }

    endDragDetails = function (e) {
        //Cambia los valores de los textbox cuando termina el drag
        document.getElementById('Lat').value = e.entity.getLocation().latitude.toFixed(5).replace(".", ",");
        document.getElementById('Lon').value = e.entity.getLocation().longitude.toFixed(5).replace(".", ",");
    }
      

</script>
<div class="row">
    <div class="small-12 columns">
        <div id='myMap' style="position: relative; height: 300px;">
        </div>
    </div>
    <div class="small-8 columns right">
        <input id="mostrarMapa" type="button" value="mostrar Mapa" onclick="getMap();" />
        <input id="agregarPin" type="button" value="Agregar Pin" onclick="attachPushpinDragEndEvent();" />
    </div>
</div>
<script type="text/javascript">
    $('input[type="file"]').change(function () {
        if (this.files && this.files[0]) {
            var reader = new FileReader();
            reader.readAsDataURL(this.files[0]);
            reader.onload = function (e) {
                $('#preview').attr('src', e.target.result);
                if ($('#preview')[0].naturalHeight <= 400) {
                    alert('El alto de la imagen tiene que ser mayor de 400px');
                    reset_form_element($('#Imagen'));
                    $('#preview').attr('src', '/Images/noPhoto.jpg');
                }
            }
        }
    });

    function reset_form_element(e) {
        e.wrap('<form>').parent('form').trigger('reset');
        e.unwrap();
    }
 </script> 